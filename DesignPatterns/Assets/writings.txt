Motivate your choice of design patterns in relation to the gameplay system's design challenges.
this means like: shooting system has a lot of varing guns and extentions
and the gun also has some states which interact in interesting ways.

Seek to build the functionality only insofar as it is necessary to design the implementation. 

i think the object pool is gonna be the touchest cooky here.
in the sense that its about game objects and not erm classes ya know?
how can i make the object pool support both plain classes AND gameobjects?

furthermore, the state mahcine and inputs are quite expansive, ranging from weapon switching
and insepcting. i basically need to have these states:

ready state / idlestate
reloading state
switching state
isnepcting state
removing silencer state.

11 may : 

maybe add some sound

i think weapon swapping would be the most complciated
but also the coolest tbh.

===

make suer all the yeets are in namespaces.


make sure to remove all unused scripts for clarity.

the decorator needs to be like the one from equilbruium.

make sure to not include text mesh pro because is laggy ish.
maybe for input we can look at oobserver instead of command
but i feel like in this context command is better becasue obserover
has eventmanger connotiations.

also need to make sure the object pool is fine tuned for gameobject specifically,
we are still useing unity here after all so yeah. also look to keep the code somewhat SOLID.

===

i want to make it so that
i have custom bidnigns input
and then cool decorator for the gun and 
then objectpool for the gameobjects of the bullets
and then FSM cocnept which i already have somewhat for the reloading
and silencer remover.

the inputs of the state machine would prolly be the key presses /
shoot
reload
silencer

or some other action

maybe inspect even.